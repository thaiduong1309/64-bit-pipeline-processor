module Control (instr, Rm, Rd, Reg2Loc, ALUscr, MemtoReg, RegWri, MemWri, BrTaken, UncondBr, ALUOp);

	input logic [31:21]instr;
	output logic [2:0]ALUOp;
	output logic Reg2Loc, ALUscr, MemtoReg, RegWri, MemWri, BrTaken, UncondBr;
	
	always_comb
	case (instruc)
	//ADDS: 558
	11'b10101011000:
		Reg2Loc	= 1'b1;
		ALUscr	= 1'b0;
		MemtoReg = 1'b0;
		RegWri	= 1'b1;
		MemWri	= 1'b0;
		BrTaken	= 1'b0;
		UncondBr = 1'bX;
		ALUOp		= 3'b010;
	//SUBS: 758
	11'b11101011000:
		Reg2Loc	= 1'b1;
		ALUscr	= 1'b0;
		MemtoReg = 1'b0;
		RegWri	= 1'b1;
		MemWri	= 1'b0;
		BrTaken	= 1'b0;
		UncondBr = 1'bX;
		ALUOp		= 3'b011;
	//LDUR: 7C0
	11'b11111000010:
		Reg2Loc	= 1'bX;
		ALUscr	= 1'b1;
		MemtoReg = 1'b1;
		RegWri	= 1'b1;
		MemWri	= 1'b0;
		BrTaken	= 1'b0;
		UncondBr = 1'bX;
		ALUOp		= 3'b010;
	//STUR: 7C2
	11'b11111000000:
		Reg2Loc	= 1'b0;
		ALUscr	= 1'b1;
		MemtoReg = 1'bX;
		RegWri	= 1'b0;
		MemWri	= 1'b1;
		BrTaken	= 1'b0;
		UncondBr = 1'bX;
		ALUOp		= 3'b010;
	//B: 54
	11'b000101xxxxx:
		Reg2Loc	= 1'bX;
		ALUscr	= 1'bX;
		MemtoReg = 1'bX;
		RegWri	= 1'b0;
		MemWri	= 1'b0;
		BrTaken	= 1'b1;
		UncondBr = 1'b1;
		ALUOp		= 3'bX;
	//CBZ: B4
	11'b10110100xxx:
		Reg2Loc	= 1'b0;
		ALUscr	= 1'b0;
		MemtoReg = 1'bX;
		RegWri	= 1'b0;
		MemWri	= 1'b0;
		BrTaken	= 1'b0;
		UncondBr = 1'b0;
		ALUOp		= 3'b000;
	endcase
endmodule	
